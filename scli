#!/usr/bin/env ruby

require 'rubygems'
require 'mixlib/cli'
require 'fog'
require 'colored'
require 'terminal-table'
require './lib/generic'

class MyCLI
  include Mixlib::CLI

  option :config_file,
    :short => "-c CONFIG",
    :long  => "--config CONFIG",
    :default => '~/.scli/config.rb',
    :description => "The configuration file to use"

  option :instance_id,
    :short => "-i INSTANCE",
    :long => "--instance-id INSTANCE",
    :description => "Instance ID to use"

  option :volume_id,
    :short => "-v VOLUME",
    :long => "--volume-id VOLUME",
    :description => "Volume ID to use"

  option :help,
    :short => "-h",
    :long => "--help",
    :description => "SCLI Help",
    :on => :tail,
    :boolean => true,
    :show_options => true,
    :exit => 0

end

cli = MyCLI.new
cli.parse_options

module Scli
  def self.options
    cli = MyCLI.new
    cli.parse_options
    cli.config.merge!(read_config(File.expand_path(cli.config[:config_file])))
  end
end

Scli.generate_config_file(cli.config[:config_file]) unless Scli.config_file_exists?(cli.config[:config_file])

help_rows = []
help_rows << ["din", "describe-instances, describe-instance", "Instance ID (Opt)", "scli din, scli din 123456"]
help_rows << ["reboot", "", "Instance ID (Req)", "scli reboot 123456"]
help_rows << ["tin", "terminate-instance", "Instance ID (Req)", "scli tin 123456, scli terminate-instance 123456"]
help_rows << ["dvol", "describe-volume, describe-volumes", "Volume ID (Opt)", "scli dvol 23456, scli describe-volume 23456"]
help_rows << ["attvol", "attach-volume", "Volume ID (Req), Instance ID (Req)", "scli attvol -i 123456 -v 23456"]
help_rows << ["detvol", "detach-volume", "Volume ID (Req), Instance ID (Req)", "scli detvol -i 123456 -v 23456"]
help_rows << ["delvol", "delete-volume,terminate-volume", "Volume ID (Req)", "scli delvol -v 23456, scli delvol 23456"]
help_table = Terminal::Table.new :title => "Help", :headings => ["Command", "Aliases", "Arguments", "Examples"], :rows => help_rows

begin
  case ARGV[0]
  when 'describe-instance', 'describe-instances', 'din'
    require './lib/describe-instance'
  when 'reboot'
    require './lib/reboot'
  when 'terminate-instance', 'tin'
    require './lib/terminate-instance'
  when 'describe-volume', 'describe-volumes', 'dvol'
    require './lib/describe-volume'
  when 'attvol', 'attach-volume'
    require './lib/attach-volume'
  when 'detvol', 'detach-volume'
    require './lib/detach-volume'
  when 'delvol', 'delete-volume', 'terminate-volume'
    require './lib/terminate-volume'
  when 'help'
    puts help_table
  else
    puts help_table
  end
rescue Excon::Errors::InternalServerError
  puts "Got an internal server error while trying to talk to IBM, Retry"
rescue Excon::Errors::PreconditionFailed => e
  puts "A precondition failed while trying to do our API Request: #{e.response.body}"
rescue Excon::Errors::SocketError => e
  puts "Could not connect to IBM: #{e}"
rescue Excon::Errors::Unauthorized => e
  puts "You were not authorized to access a resource, Are you sure its owned by the account in your config file? -- #{e.response.body}"
end
